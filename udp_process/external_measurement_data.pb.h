// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: external_measurement_data.proto

#ifndef PROTOBUF_INCLUDED_external_5fmeasurement_5fdata_2eproto
#define PROTOBUF_INCLUDED_external_5fmeasurement_5fdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_external_5fmeasurement_5fdata_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_external_5fmeasurement_5fdata_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_external_5fmeasurement_5fdata_2eproto();
namespace tutorial {
class ExternalMeasurementDataBean;
class ExternalMeasurementDataBeanDefaultTypeInternal;
extern ExternalMeasurementDataBeanDefaultTypeInternal _ExternalMeasurementDataBean_default_instance_;
class ParameterBody;
class ParameterBodyDefaultTypeInternal;
extern ParameterBodyDefaultTypeInternal _ParameterBody_default_instance_;
class PredictDataBody;
class PredictDataBodyDefaultTypeInternal;
extern PredictDataBodyDefaultTypeInternal _PredictDataBody_default_instance_;
}  // namespace tutorial
namespace google {
namespace protobuf {
template<> ::tutorial::ExternalMeasurementDataBean* Arena::CreateMaybeMessage<::tutorial::ExternalMeasurementDataBean>(Arena*);
template<> ::tutorial::ParameterBody* Arena::CreateMaybeMessage<::tutorial::ParameterBody>(Arena*);
template<> ::tutorial::PredictDataBody* Arena::CreateMaybeMessage<::tutorial::PredictDataBody>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tutorial {

// ===================================================================

class ExternalMeasurementDataBean final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tutorial.ExternalMeasurementDataBean) */ {
 public:
  ExternalMeasurementDataBean();
  virtual ~ExternalMeasurementDataBean();

  ExternalMeasurementDataBean(const ExternalMeasurementDataBean& from);

  inline ExternalMeasurementDataBean& operator=(const ExternalMeasurementDataBean& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExternalMeasurementDataBean(ExternalMeasurementDataBean&& from) noexcept
    : ExternalMeasurementDataBean() {
    *this = ::std::move(from);
  }

  inline ExternalMeasurementDataBean& operator=(ExternalMeasurementDataBean&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ExternalMeasurementDataBean& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExternalMeasurementDataBean* internal_default_instance() {
    return reinterpret_cast<const ExternalMeasurementDataBean*>(
               &_ExternalMeasurementDataBean_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ExternalMeasurementDataBean* other);
  friend void swap(ExternalMeasurementDataBean& a, ExternalMeasurementDataBean& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExternalMeasurementDataBean* New() const final {
    return CreateMaybeMessage<ExternalMeasurementDataBean>(nullptr);
  }

  ExternalMeasurementDataBean* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExternalMeasurementDataBean>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExternalMeasurementDataBean& from);
  void MergeFrom(const ExternalMeasurementDataBean& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExternalMeasurementDataBean* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tutorial.ParameterBody parameter = 1;
  bool has_parameter() const;
  void clear_parameter();
  static const int kParameterFieldNumber = 1;
  const ::tutorial::ParameterBody& parameter() const;
  ::tutorial::ParameterBody* release_parameter();
  ::tutorial::ParameterBody* mutable_parameter();
  void set_allocated_parameter(::tutorial::ParameterBody* parameter);

  // .tutorial.PredictDataBody predictData = 2;
  bool has_predictdata() const;
  void clear_predictdata();
  static const int kPredictDataFieldNumber = 2;
  const ::tutorial::PredictDataBody& predictdata() const;
  ::tutorial::PredictDataBody* release_predictdata();
  ::tutorial::PredictDataBody* mutable_predictdata();
  void set_allocated_predictdata(::tutorial::PredictDataBody* predictdata);

  // @@protoc_insertion_point(class_scope:tutorial.ExternalMeasurementDataBean)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::tutorial::ParameterBody* parameter_;
  ::tutorial::PredictDataBody* predictdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_external_5fmeasurement_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PredictDataBody final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tutorial.PredictDataBody) */ {
 public:
  PredictDataBody();
  virtual ~PredictDataBody();

  PredictDataBody(const PredictDataBody& from);

  inline PredictDataBody& operator=(const PredictDataBody& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictDataBody(PredictDataBody&& from) noexcept
    : PredictDataBody() {
    *this = ::std::move(from);
  }

  inline PredictDataBody& operator=(PredictDataBody&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PredictDataBody& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictDataBody* internal_default_instance() {
    return reinterpret_cast<const PredictDataBody*>(
               &_PredictDataBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PredictDataBody* other);
  friend void swap(PredictDataBody& a, PredictDataBody& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictDataBody* New() const final {
    return CreateMaybeMessage<PredictDataBody>(nullptr);
  }

  PredictDataBody* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PredictDataBody>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PredictDataBody& from);
  void MergeFrom(const PredictDataBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictDataBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string dataStr = 1;
  void clear_datastr();
  static const int kDataStrFieldNumber = 1;
  const ::std::string& datastr() const;
  void set_datastr(const ::std::string& value);
  #if LANG_CXX11
  void set_datastr(::std::string&& value);
  #endif
  void set_datastr(const char* value);
  void set_datastr(const char* value, size_t size);
  ::std::string* mutable_datastr();
  ::std::string* release_datastr();
  void set_allocated_datastr(::std::string* datastr);

  // @@protoc_insertion_point(class_scope:tutorial.PredictDataBody)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr datastr_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_external_5fmeasurement_5fdata_2eproto;
};
// -------------------------------------------------------------------

class ParameterBody final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tutorial.ParameterBody) */ {
 public:
  ParameterBody();
  virtual ~ParameterBody();

  ParameterBody(const ParameterBody& from);

  inline ParameterBody& operator=(const ParameterBody& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterBody(ParameterBody&& from) noexcept
    : ParameterBody() {
    *this = ::std::move(from);
  }

  inline ParameterBody& operator=(ParameterBody&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ParameterBody& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterBody* internal_default_instance() {
    return reinterpret_cast<const ParameterBody*>(
               &_ParameterBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ParameterBody* other);
  friend void swap(ParameterBody& a, ParameterBody& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterBody* New() const final {
    return CreateMaybeMessage<ParameterBody>(nullptr);
  }

  ParameterBody* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterBody>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterBody& from);
  void MergeFrom(const ParameterBody& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string spatialEncoding = 1;
  void clear_spatialencoding();
  static const int kSpatialEncodingFieldNumber = 1;
  const ::std::string& spatialencoding() const;
  void set_spatialencoding(const ::std::string& value);
  #if LANG_CXX11
  void set_spatialencoding(::std::string&& value);
  #endif
  void set_spatialencoding(const char* value);
  void set_spatialencoding(const char* value, size_t size);
  ::std::string* mutable_spatialencoding();
  ::std::string* release_spatialencoding();
  void set_allocated_spatialencoding(::std::string* spatialencoding);

  // string beginTime = 2;
  void clear_begintime();
  static const int kBeginTimeFieldNumber = 2;
  const ::std::string& begintime() const;
  void set_begintime(const ::std::string& value);
  #if LANG_CXX11
  void set_begintime(::std::string&& value);
  #endif
  void set_begintime(const char* value);
  void set_begintime(const char* value, size_t size);
  ::std::string* mutable_begintime();
  ::std::string* release_begintime();
  void set_allocated_begintime(::std::string* begintime);

  // string endTime = 3;
  void clear_endtime();
  static const int kEndTimeFieldNumber = 3;
  const ::std::string& endtime() const;
  void set_endtime(const ::std::string& value);
  #if LANG_CXX11
  void set_endtime(::std::string&& value);
  #endif
  void set_endtime(const char* value);
  void set_endtime(const char* value, size_t size);
  ::std::string* mutable_endtime();
  ::std::string* release_endtime();
  void set_allocated_endtime(::std::string* endtime);

  // string deviceName = 4;
  void clear_devicename();
  static const int kDeviceNameFieldNumber = 4;
  const ::std::string& devicename() const;
  void set_devicename(const ::std::string& value);
  #if LANG_CXX11
  void set_devicename(::std::string&& value);
  #endif
  void set_devicename(const char* value);
  void set_devicename(const char* value, size_t size);
  ::std::string* mutable_devicename();
  ::std::string* release_devicename();
  void set_allocated_devicename(::std::string* devicename);

  // @@protoc_insertion_point(class_scope:tutorial.ParameterBody)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr spatialencoding_;
  ::google::protobuf::internal::ArenaStringPtr begintime_;
  ::google::protobuf::internal::ArenaStringPtr endtime_;
  ::google::protobuf::internal::ArenaStringPtr devicename_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_external_5fmeasurement_5fdata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ExternalMeasurementDataBean

// .tutorial.ParameterBody parameter = 1;
inline bool ExternalMeasurementDataBean::has_parameter() const {
  return this != internal_default_instance() && parameter_ != nullptr;
}
inline void ExternalMeasurementDataBean::clear_parameter() {
  if (GetArenaNoVirtual() == nullptr && parameter_ != nullptr) {
    delete parameter_;
  }
  parameter_ = nullptr;
}
inline const ::tutorial::ParameterBody& ExternalMeasurementDataBean::parameter() const {
  const ::tutorial::ParameterBody* p = parameter_;
  // @@protoc_insertion_point(field_get:tutorial.ExternalMeasurementDataBean.parameter)
  return p != nullptr ? *p : *reinterpret_cast<const ::tutorial::ParameterBody*>(
      &::tutorial::_ParameterBody_default_instance_);
}
inline ::tutorial::ParameterBody* ExternalMeasurementDataBean::release_parameter() {
  // @@protoc_insertion_point(field_release:tutorial.ExternalMeasurementDataBean.parameter)
  
  ::tutorial::ParameterBody* temp = parameter_;
  parameter_ = nullptr;
  return temp;
}
inline ::tutorial::ParameterBody* ExternalMeasurementDataBean::mutable_parameter() {
  
  if (parameter_ == nullptr) {
    auto* p = CreateMaybeMessage<::tutorial::ParameterBody>(GetArenaNoVirtual());
    parameter_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tutorial.ExternalMeasurementDataBean.parameter)
  return parameter_;
}
inline void ExternalMeasurementDataBean::set_allocated_parameter(::tutorial::ParameterBody* parameter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete parameter_;
  }
  if (parameter) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      parameter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parameter, submessage_arena);
    }
    
  } else {
    
  }
  parameter_ = parameter;
  // @@protoc_insertion_point(field_set_allocated:tutorial.ExternalMeasurementDataBean.parameter)
}

// .tutorial.PredictDataBody predictData = 2;
inline bool ExternalMeasurementDataBean::has_predictdata() const {
  return this != internal_default_instance() && predictdata_ != nullptr;
}
inline void ExternalMeasurementDataBean::clear_predictdata() {
  if (GetArenaNoVirtual() == nullptr && predictdata_ != nullptr) {
    delete predictdata_;
  }
  predictdata_ = nullptr;
}
inline const ::tutorial::PredictDataBody& ExternalMeasurementDataBean::predictdata() const {
  const ::tutorial::PredictDataBody* p = predictdata_;
  // @@protoc_insertion_point(field_get:tutorial.ExternalMeasurementDataBean.predictData)
  return p != nullptr ? *p : *reinterpret_cast<const ::tutorial::PredictDataBody*>(
      &::tutorial::_PredictDataBody_default_instance_);
}
inline ::tutorial::PredictDataBody* ExternalMeasurementDataBean::release_predictdata() {
  // @@protoc_insertion_point(field_release:tutorial.ExternalMeasurementDataBean.predictData)
  
  ::tutorial::PredictDataBody* temp = predictdata_;
  predictdata_ = nullptr;
  return temp;
}
inline ::tutorial::PredictDataBody* ExternalMeasurementDataBean::mutable_predictdata() {
  
  if (predictdata_ == nullptr) {
    auto* p = CreateMaybeMessage<::tutorial::PredictDataBody>(GetArenaNoVirtual());
    predictdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:tutorial.ExternalMeasurementDataBean.predictData)
  return predictdata_;
}
inline void ExternalMeasurementDataBean::set_allocated_predictdata(::tutorial::PredictDataBody* predictdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete predictdata_;
  }
  if (predictdata) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      predictdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, predictdata, submessage_arena);
    }
    
  } else {
    
  }
  predictdata_ = predictdata;
  // @@protoc_insertion_point(field_set_allocated:tutorial.ExternalMeasurementDataBean.predictData)
}

// -------------------------------------------------------------------

// PredictDataBody

// string dataStr = 1;
inline void PredictDataBody::clear_datastr() {
  datastr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictDataBody::datastr() const {
  // @@protoc_insertion_point(field_get:tutorial.PredictDataBody.dataStr)
  return datastr_.GetNoArena();
}
inline void PredictDataBody::set_datastr(const ::std::string& value) {
  
  datastr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.PredictDataBody.dataStr)
}
#if LANG_CXX11
inline void PredictDataBody::set_datastr(::std::string&& value) {
  
  datastr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tutorial.PredictDataBody.dataStr)
}
#endif
inline void PredictDataBody::set_datastr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  datastr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.PredictDataBody.dataStr)
}
inline void PredictDataBody::set_datastr(const char* value, size_t size) {
  
  datastr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.PredictDataBody.dataStr)
}
inline ::std::string* PredictDataBody::mutable_datastr() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.PredictDataBody.dataStr)
  return datastr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictDataBody::release_datastr() {
  // @@protoc_insertion_point(field_release:tutorial.PredictDataBody.dataStr)
  
  return datastr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictDataBody::set_allocated_datastr(::std::string* datastr) {
  if (datastr != nullptr) {
    
  } else {
    
  }
  datastr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datastr);
  // @@protoc_insertion_point(field_set_allocated:tutorial.PredictDataBody.dataStr)
}

// -------------------------------------------------------------------

// ParameterBody

// string spatialEncoding = 1;
inline void ParameterBody::clear_spatialencoding() {
  spatialencoding_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParameterBody::spatialencoding() const {
  // @@protoc_insertion_point(field_get:tutorial.ParameterBody.spatialEncoding)
  return spatialencoding_.GetNoArena();
}
inline void ParameterBody::set_spatialencoding(const ::std::string& value) {
  
  spatialencoding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.ParameterBody.spatialEncoding)
}
#if LANG_CXX11
inline void ParameterBody::set_spatialencoding(::std::string&& value) {
  
  spatialencoding_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tutorial.ParameterBody.spatialEncoding)
}
#endif
inline void ParameterBody::set_spatialencoding(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  spatialencoding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.ParameterBody.spatialEncoding)
}
inline void ParameterBody::set_spatialencoding(const char* value, size_t size) {
  
  spatialencoding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.ParameterBody.spatialEncoding)
}
inline ::std::string* ParameterBody::mutable_spatialencoding() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.ParameterBody.spatialEncoding)
  return spatialencoding_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParameterBody::release_spatialencoding() {
  // @@protoc_insertion_point(field_release:tutorial.ParameterBody.spatialEncoding)
  
  return spatialencoding_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParameterBody::set_allocated_spatialencoding(::std::string* spatialencoding) {
  if (spatialencoding != nullptr) {
    
  } else {
    
  }
  spatialencoding_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spatialencoding);
  // @@protoc_insertion_point(field_set_allocated:tutorial.ParameterBody.spatialEncoding)
}

// string beginTime = 2;
inline void ParameterBody::clear_begintime() {
  begintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParameterBody::begintime() const {
  // @@protoc_insertion_point(field_get:tutorial.ParameterBody.beginTime)
  return begintime_.GetNoArena();
}
inline void ParameterBody::set_begintime(const ::std::string& value) {
  
  begintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.ParameterBody.beginTime)
}
#if LANG_CXX11
inline void ParameterBody::set_begintime(::std::string&& value) {
  
  begintime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tutorial.ParameterBody.beginTime)
}
#endif
inline void ParameterBody::set_begintime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  begintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.ParameterBody.beginTime)
}
inline void ParameterBody::set_begintime(const char* value, size_t size) {
  
  begintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.ParameterBody.beginTime)
}
inline ::std::string* ParameterBody::mutable_begintime() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.ParameterBody.beginTime)
  return begintime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParameterBody::release_begintime() {
  // @@protoc_insertion_point(field_release:tutorial.ParameterBody.beginTime)
  
  return begintime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParameterBody::set_allocated_begintime(::std::string* begintime) {
  if (begintime != nullptr) {
    
  } else {
    
  }
  begintime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), begintime);
  // @@protoc_insertion_point(field_set_allocated:tutorial.ParameterBody.beginTime)
}

// string endTime = 3;
inline void ParameterBody::clear_endtime() {
  endtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParameterBody::endtime() const {
  // @@protoc_insertion_point(field_get:tutorial.ParameterBody.endTime)
  return endtime_.GetNoArena();
}
inline void ParameterBody::set_endtime(const ::std::string& value) {
  
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.ParameterBody.endTime)
}
#if LANG_CXX11
inline void ParameterBody::set_endtime(::std::string&& value) {
  
  endtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tutorial.ParameterBody.endTime)
}
#endif
inline void ParameterBody::set_endtime(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.ParameterBody.endTime)
}
inline void ParameterBody::set_endtime(const char* value, size_t size) {
  
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.ParameterBody.endTime)
}
inline ::std::string* ParameterBody::mutable_endtime() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.ParameterBody.endTime)
  return endtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParameterBody::release_endtime() {
  // @@protoc_insertion_point(field_release:tutorial.ParameterBody.endTime)
  
  return endtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParameterBody::set_allocated_endtime(::std::string* endtime) {
  if (endtime != nullptr) {
    
  } else {
    
  }
  endtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endtime);
  // @@protoc_insertion_point(field_set_allocated:tutorial.ParameterBody.endTime)
}

// string deviceName = 4;
inline void ParameterBody::clear_devicename() {
  devicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParameterBody::devicename() const {
  // @@protoc_insertion_point(field_get:tutorial.ParameterBody.deviceName)
  return devicename_.GetNoArena();
}
inline void ParameterBody::set_devicename(const ::std::string& value) {
  
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.ParameterBody.deviceName)
}
#if LANG_CXX11
inline void ParameterBody::set_devicename(::std::string&& value) {
  
  devicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tutorial.ParameterBody.deviceName)
}
#endif
inline void ParameterBody::set_devicename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.ParameterBody.deviceName)
}
inline void ParameterBody::set_devicename(const char* value, size_t size) {
  
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.ParameterBody.deviceName)
}
inline ::std::string* ParameterBody::mutable_devicename() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.ParameterBody.deviceName)
  return devicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParameterBody::release_devicename() {
  // @@protoc_insertion_point(field_release:tutorial.ParameterBody.deviceName)
  
  return devicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParameterBody::set_allocated_devicename(::std::string* devicename) {
  if (devicename != nullptr) {
    
  } else {
    
  }
  devicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicename);
  // @@protoc_insertion_point(field_set_allocated:tutorial.ParameterBody.deviceName)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tutorial

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_external_5fmeasurement_5fdata_2eproto
